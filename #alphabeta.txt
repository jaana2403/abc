#alphabeta

mini,maxi=-1000,1000
def minmax(depth,nodeIndex,maximizing_player,values,alpha,beta):
    if depth==3:
        return values[nodeIndex]
    if maximizing_player:
        best=mini
        for i in range(0,2):
            val=minmax(depth+1,nodeIndex*2+i,False,values,alpha,beta)
            best=max(val,best)
            alpha=max(alpha,best)
            if beta<=alpha:
                break
        return best
    else:
        best=maxi
        for i in range(0,2):
            val=minmax(depth+1,nodeIndex*2+i,True,values,alpha,beta)
            best=min(val,best)
            beta=min(beta,best)
            if beta<=alpha:
                break
        return best
        
if __name__=='__main__':
    values=[3,5,6,9,1,2,0,-1]
    print('The optimal value is ',minmax(0,0,True,values,mini,maxi))